name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  login:
    name: Login Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps

      - name: Run Login tests
        env:
          CORRECT_EMAIL: ${{ secrets.CORRECT_EMAIL }}
          CORRECT_PASSWORD: ${{ secrets.CORRECT_PASSWORD }}
          CORRECT_USER: ${{ secrets.CORRECT_USER }}
        run: npx playwright test tests/login.spec.ts

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: login-report
          path: playwright-report/
          retention-days: 30

  products:
    name: Products Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps
      - name: Run Products tests
        env:
          CORRECT_EMAIL: ${{ secrets.CORRECT_EMAIL }}
          CORRECT_PASSWORD: ${{ secrets.CORRECT_PASSWORD }}
          CORRECT_USER: ${{ secrets.CORRECT_USER }}
        run: npx playwright test tests/products.spec.ts
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: products-report
          path: playwright-report/
          retention-days: 30

  register:
    name: Register Account Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps
      - name: Run Register Account tests
        env:
          CORRECT_EMAIL: ${{ secrets.CORRECT_EMAIL }}
          CORRECT_PASSWORD: ${{ secrets.CORRECT_PASSWORD }}
          CORRECT_USER: ${{ secrets.CORRECT_USER }}
        run: npx playwright test tests/register_contact.spec.ts
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: register-report
          path: playwright-report/
          retention-days: 30